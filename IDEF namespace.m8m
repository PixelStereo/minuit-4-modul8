<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AUTHOR</key>
	<string></string>
	<key>CONTROLS</key>
	<array>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>save span file</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>2.5589537703427585e-307</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>1.112640907047359e-308</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>30.91015625</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>2.5589537703427585e-307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>1.0013248274457439e-307</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>2.0551360156192118e+17</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>1.9981043474864707e+17</real>
			<key>NAME</key>
			<string>saveJSONUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>saveJSONUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>11</integer>
			<key>WIDTH</key>
			<real>491.2109375</real>
			<key>X</key>
			<real>4</real>
			<key>Y</key>
			<real>27</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>new cue</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>42991624.289394379</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>286554849280</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>15.78515625</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>NAME</key>
			<string>event_newUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>event_newUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>12</integer>
			<key>WIDTH</key>
			<real>61.82421875</real>
			<key>X</key>
			<real>14</real>
			<key>Y</key>
			<real>299</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>Untitled</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>42991624.289394379</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>286554849280</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>233.328125</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>TEXT</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>NAME</key>
			<string>eventsUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>eventsUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>LISTBOX</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>14</integer>
			<key>WIDTH</key>
			<real>246.45703125</real>
			<key>X</key>
			<real>5</real>
			<key>Y</key>
			<real>61</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string></string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>52.16796875</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>NAME</key>
			<string>event_descriptionUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>event_descriptionUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTFIELD</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>15</integer>
			<key>WIDTH</key>
			<real>231.19921875</real>
			<key>X</key>
			<real>263</real>
			<key>Y</key>
			<real>201</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string></string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>18.78125</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>NAME</key>
			<string>event_nameUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>event_nameUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTFIELD</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>17</integer>
			<key>WIDTH</key>
			<real>236.28515625</real>
			<key>X</key>
			<real>261</real>
			<key>Y</key>
			<real>276</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>name</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>nan</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>2.518169088221909e-245</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>13</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-1.1067054125179585e-227</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.5463949496523924e-313</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONW</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>18</integer>
			<key>WIDTH</key>
			<real>41.3515625</real>
			<key>X</key>
			<real>260</real>
			<key>Y</key>
			<real>297</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>description</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>nan</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>2.518169088221909e-245</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>13.6953125</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-1.1067054125179585e-227</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.5463949496523924e-313</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONW</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>19</integer>
			<key>WIDTH</key>
			<real>75</real>
			<key>X</key>
			<real>261</real>
			<key>Y</key>
			<real>257</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string></string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>16.08984375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>-2.5280059709001312e+307</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>nan</real>
			<key>NAME</key>
			<string>pathUI</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>pathUI</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTFIELD</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>20</integer>
			<key>WIDTH</key>
			<real>492.6484375</real>
			<key>X</key>
			<real>4</real>
			<key>Y</key>
			<real>5</real>
		</dict>
	</array>
	<key>DESCRIPTION</key>
	<string></string>
	<key>MODULE_AUTOFLUSH</key>
	<false/>
	<key>MODULE_CONTROL_ID_COUNTER</key>
	<integer>21</integer>
	<key>MODULE_LAYER_CONTEXTUAL</key>
	<false/>
	<key>MODULE_RESETDIRECTKEY_PAUSED</key>
	<true/>
	<key>MODULE_TITLEBAR_B</key>
	<real>0.20392157137393951</real>
	<key>MODULE_TITLEBAR_G</key>
	<real>0.13333334028720856</real>
	<key>MODULE_TITLEBAR_R</key>
	<real>0.08235294371843338</real>
	<key>PREFERENCES</key>
	<dict>
		<key>SCRIPT_STATE</key>
		<string>PLAYING</string>
		<key>WINDOW_HIDDEN</key>
		<false/>
		<key>WINDOW_MINIMIZED</key>
		<false/>
		<key>WINDOW_X</key>
		<real>830</real>
		<key>WINDOW_Y</key>
		<real>480</real>
	</dict>
	<key>SCRIPT_CLEANUP</key>
	<string></string>
	<key>SCRIPT_DESERIALIZE</key>
	<string>print inDict['events']
</string>
	<key>SCRIPT_EVENT</key>
	<string></string>
	<key>SCRIPT_INIT</key>
	<string>#################
# NAMESPACE MODULE
# Renaud Rubiano - Studio Mirio - 2014
################################

#make a dictionary with the whole namespace when loading the module
#container have 'data' and 'attributes' dict
#parameters have 'attributes' dict
#parameters are in the 'data' dict of its parent container

#version check 
# JSON needs python 2.6, so it needs modul8 2.9
version = 2.9
if modul8.getValue('direct_version', 0) &lt; version : module.stop() 

#################
# IMPORTS
################################
import  json
import os	
# needs for events module
import time
import datetime
#for pretty-print of dictionaries
from pprint import pprint	
#################
# END OF
# IMPORTS
################################




#######################
# SPAN JSON FILE
#######################
# The FilePath
the_path = '/Users/' + os.getlogin() + "/Library/Application Support/Modul8/"
#check if folder ~/Library/Application Support/Modul8 exists
if not os.path.exists(the_path) : os.mkdir(the_path)
the_path = the_path + modul8.getValue('info_projectName',0) + " events.json"
module.setValue('pathUI' , 0 , the_path)

#  Read JSON file
def span_read() : 
	try:
		with open(the_path) as json_file:
			m_span = json.load(json_file)
	except IOError:
		print 'Erreur'

#  Write JSON file
def span_write() : 
	span = module.getSharedDictionary()['span']
	out_file = open(the_path, "w")
	out_file.write(json.dumps(span,separators=(',', ': ')))
	#out_file.write(json.dumps(span,sort_keys=True,indent=4, separators=(',', ': ')))
	out_file.close()

#######################
# END OF 
# SPAN JSON FILE
#######################



#######################
#INIT NAMESPACE
#######################
#create the main dictionary
m_namespace = {}
#add application attributes
m_namespace.setdefault('attributes',{'author':'garagecube','name':'modul8','version': modul8.getValue('info_version',0),'project':modul8.getValue('info_projectName',0)})
m_namespace.setdefault('data',{})
#create the master dictionary
m_master = {}
#add master attributes
m_master.update({'attributes':{'service':'model','tags':' ','priority': 1}})
#add master data placeholder
m_master.setdefault('data' , {})
#create the mask dictionary
m_mask = {}
#add mask attributes
m_mask.update({'attributes':{'service':'model','tags':' ','priority': 1}})
#add mask data placeholder
m_mask.setdefault('data' , {})
#add layers placeholder
m_layers = {}
#add mask to main dict
m_namespace['data'].setdefault('mask',m_mask)
#add master to main dict
m_namespace['data'].setdefault('master',m_master)
#define priority index
auto_priority_index = 1

#######################
#FILL IN NAMESPACE DICT
#######################
#get all keywords (aka parameters) from Modul8
for keyword in modul8.getValue ('info_keywords',0) :
	#layer index is 0 for all master parameters
	layer_index = 0
	#get the current value of this parameter
	valueKeyw = modul8.getValue (keyword,layer_index)
	#List of master controls
	# ############ THE MASTER ##################
	if keyword.startswith ('ctrl_master') :
		#This is not usefull
		if keyword == 'layerStackPositionChange' : 
			pass		
		#replace underscore with slash more OSC-user-friendly
		else : 
			m_keyword = keyword.split('_')[2:]
			#increment priority
			auto_priority_index = auto_priority_index + 1
			m_keyword = keyword.split('_')[2:]
			#define parameters attributes 
			param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both'}}
			if len(m_keyword) == 1:
				#this is a parameter
				m_master['data'].update({m_keyword[0]:param_dict})
			if len(m_keyword) == 2:
				#this is a node
				m_master['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
				#this is a parameter
				m_master['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})
			
	# ############# THE GLOBAL MASK  ################
	elif keyword.startswith ('direct_globalMask') :	
		#replace underscore with slash more OSC-user-friendly
		m_keyword = keyword.split('_')[2:]
		#increment priority
		auto_priority_index = auto_priority_index + 1
		m_keyword = keyword.split('_')[2:]
		#define parameters attributes 
		param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both'}}
		if len(m_keyword) == 1:
			#this is a parameter
			m_mask['data'].update({m_keyword[0]:param_dict})
		if len(m_keyword) == 2:
			#this is a node
			m_mask['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
			#this is a parameter
			m_mask['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})

	# ##################### THE LAYERS  ################
	elif keyword.startswith ('ctrl_layer') :
		#This is a layer parameter
		#these are not usefull in our case
		if keyword == 'ctrl_layerStack_focusPosition' or keyword == 'ctrl_layerStack_positionChange' or keyword == 'ctrl_layer_focused' or keyword == 'id' or keyword == 'ctrl_layer_stackPosition' or keyword == 'ctrl_layerStack_duplicate' or keyword == 'ctrl_layer_activated' or keyword == 'ctrl_layer_id':
			pass
		else:
			#iterate the ten layers
			for layer_index in range(1,11):
				#make a nice name for each layer (layer.2)
				layer_index = 'layer.' + str(layer_index)
				#increment the priority
				auto_priority_index = auto_priority_index + 1
				#create for each layer a dict with attributes and placeholder for data
				m_layers.setdefault(layer_index,{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
				m_keyword = keyword
				#replace underscore with slash more OSC-user-friendly
				m_keyword = keyword.split('_')[2:]
				#define parameters attributes 
				param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both'}}
				#dont know why but this param has an empty value at the end
				if m_keyword == ['auto' , 'scaleXY' , '']:
					m_keyword = m_keyword[0:2]
				if len(m_keyword) == 1:
					#this is a parameter
					m_layers[layer_index]['data'].update({m_keyword[0]:param_dict})
				if len(m_keyword) == 2:
					#this is a container
					m_layers[layer_index]['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
					#this is a parameter
					m_layers[layer_index]['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})
				elif len(m_keyword) ==3:
					if m_keyword[1] == 'auto':
						#this is a container
						m_layers[layer_index]['data'][m_keyword[0]]['data'].setdefault(m_keyword[1],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index}})
						#this is a parameter
						m_layers[layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]].update({m_keyword[2]:param_dict})
					else:
						#this is a container
						m_layers[layer_index]['data'][m_keyword[0]]['data'].setdefault(m_keyword[1],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
						#this is a parameter
						m_layers[layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['data'].update({m_keyword[2]:param_dict})
			#update the main dict with the ten layers
			m_namespace['data'].update(m_layers)
			
#################
# END OF
# INIT NAMESPACE
################################



#################
# NAMESPACE QUERY
################################




#######################
# 	 EVENTS
debug = 0


m_events = {}
m_events.setdefault('data' , {})

#######################
# MAKE A TIMESTAMP
#######################
def timestamp():
    return str(int(time.time() * 1000))

# MAKE AN EVENT
#######################
def event_new():
	events_list = m_events['data'].keys() 
	events_list = sorted(events_list)
	event_name = "event." + str(len(events_list) + 1)
	if debug : print 'event_name' , event_name
	event_id = timestamp()
	if debug : print 'event_id' , event_id
	event_description = 'write a comment'
	if debug : print 'event_description' , event_description
	m_event_content = {}
	#m_event_content = m_namespace
	#m_event_content = make_event_content(m_event_content)
	#print m_event_content
	if debug :	print m_event_content
	m_events['data'].setdefault(event_id, {'attributes' : {'name' : event_name , 'description' : event_description , 'content' : m_event_content}})
	events_list_refresh()
	
#MAKE CONTENT EVENT (ONLY VALUES and PROPERTIES)
def make_event_content(dict) :
	for key , value in dict.iteritems() :
		if dict[key].get('attributes') :
			#print dict[key]['attributes']
			pass
		if dict[key].get('data') :
			m_event_content.setdefault(key)
			make_event_content()
			#print key
	#get_nodes(dict)
	#return m_event_content

	
# REFRESH EVENTS LIST
#######################
def events_list_refresh() :
	events_list = m_events['data'].keys() 
	events_list = sorted(events_list)
	module.setAttribute('eventsUI','TEXTLIST',events_list)
	if debug : print 'events_list' , events_list
	#print m_events['data']

def span_events_refresh() : 
	module.getSharedDictionary()['span'] = {'application' : m_namespace , 'events' : m_events}
	span_write()
#######################
# END OF EVENTS
#######################



#event_new()
</string>
	<key>SCRIPT_KEYWORDEVENT</key>
	<string>if keyword == 'ctrl_layer_activated' : 
	#On init, we could just ask which layer is activated… and make namespace from it.
	#If we add layers, they have to be dynamically add
	pass
elif keyword == 'ctrl_layerStack_focusPosition' or keyword == 'ctrl_layerStack_positionChange' : 
	#make a dump of these layers
	pass
#this is a master parameter
elif keyword.startswith ('ctrl_master') :	
	#one line for listen function
	layer_index = 'master'
	#List of master controls
	m_keyword = keyword.split('_')[2:]
	m_keyword = m_keyword
	if len(m_keyword) == 1:
		m_namespace['data']['master']['data'][m_keyword[0]]['attributes']['value'] = param
	if len(m_keyword) == 2:
		m_namespace['data']['master']['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
#this is a mask parameter
elif keyword.startswith ('direct_globalMask') :	
	#one line for listen function
	layer_index = 'mask'
	#List of mask controls
	m_keyword = keyword.split('_')[2:]
	m_keyword = m_keyword
	if len(m_keyword) == 1:
		m_namespace['data']['mask']['data'][m_keyword[0]]['attributes']['value'] = param
	if len(m_keyword) == 2:
		m_namespace['data']['mask']['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
	if len(m_keyword) == 3:
		m_namespace['data']['mask']['data'][m_keyword[0]]['data'][m_keyword[1]]['data'][m_keyword[2]]['attributes']['value'] = param
#this is a layer parameter
elif keyword.startswith ('ctrl_layer') :
	#these are not usefull in our case
	if keyword == 'ctrl_layerStack_focusPosition' or keyword == 'ctrl_layerStack_positionChange' or keyword == 'ctrl_layer_focused' or keyword == 'id' or keyword == 'ctrl_layer_stackPosition' or keyword == 'ctrl_layerStack_duplicate' or keyword == 'ctrl_layer_activated' or keyword == 'ctrl_layer_id':
		pass
	else:		
		layer_index = 'layer.' + str(layer)
		m_keyword = keyword
		m_keyword = keyword.split('_')[2:]
		param_dict = {'value': param}
		if len(m_keyword) == 1:
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['attributes']['value'] = param
		if len(m_keyword) == 2:
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
		elif len(m_keyword) ==3:
			#print m_keyword , param
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['data'][m_keyword[2]]['attributes']['value'] = param</string>
	<key>SCRIPT_MESSAGE</key>
	<string>#IDEF FILE MANAGEMENT
#write the file on the hard drive
#json needs Modul8 2.9 (python 2.6)

if msg=='saveJSONUI':
	if param['value'] == 1 :
		# Write a file
		span_write()

if msg=='eventsUI':
	if param['selection'] != 'u' :
		event_selected_id = str(param['selection'])
		if debug == 1 : print 'event_selected_id' , event_selected_id
		event_selected_name = m_events['data'][event_selected_id]['attributes']['name']
		module.setValue('event_nameUI',0, event_selected_name)
		event_selected_description = m_events['data'][event_selected_id]['attributes']['description']
		module.setValue('event_descriptionUI',0, event_selected_description)

if msg == 'event_descriptionUI' : 
	if param['text'] != 'u' :
		if debug == 1 :	print 'event_descriptionUI' , param
		m_events['data'][event_selected_id]['attributes']['description'] = param['text']
		span_events_refresh()

if msg == 'event_nameUI' : 
	if param['text'] != 'u' :
		if debug == 1 : print 'event_nameUI' , param
		m_events['data'][event_selected_id]['attributes']['name'] = param['text']
		span_events_refresh()

#SEND JSON STRING VIA UDP
#param = json.dumps(m_namespace)
#if print_osc_output : print "OSC OUTPUT : ",  address, param
#modul8.sendOSC('/test' , param)

#MAKE AN EVENT
if msg=='event_newUI':
	if param['value'] == 1 :
		event_new()</string>
	<key>SCRIPT_PAUSEEVENT</key>
	<string></string>
	<key>SCRIPT_PERIODICAL</key>
	<string></string>
	<key>SCRIPT_SERIALIZE</key>
	<string>outDict['events'] = m_events</string>
	<key>SHORT_DESCRIPTION</key>
	<string></string>
	<key>VERSION</key>
	<string></string>
	<key>WINDOW_HEIGHT</key>
	<real>350</real>
	<key>WINDOW_WIDTH</key>
	<real>500</real>
</dict>
</plist>
