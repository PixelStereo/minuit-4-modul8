<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AUTHOR</key>
	<string>Pixel Stereo</string>
	<key>CONTROLS</key>
	<array>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>You're running an outdated version… please update</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-3.6213796544445427e-77</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>9.8813129168249309e-324</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string>update</string>
			<key>HEIGHT</key>
			<real>19.734375</real>
			<key>HIDDEN</key>
			<integer>1</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>3.9525251667299724e-323</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>CENTER</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONW</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>20</integer>
			<key>WIDTH</key>
			<real>343.69921875</real>
			<key>X</key>
			<real>0.0</real>
			<key>Y</key>
			<real>5</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>You're running the last version of this Module</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-3.6213796544445427e-77</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>9.8813129168249309e-324</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string>uptodate</string>
			<key>HEIGHT</key>
			<real>19.3984375</real>
			<key>HIDDEN</key>
			<integer>1</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>3.9525251667299724e-323</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>CENTER</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONW</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>21</integer>
			<key>WIDTH</key>
			<real>336.21484375</real>
			<key>X</key>
			<real>1</real>
			<key>Y</key>
			<real>6</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>check your internet access</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>-3.6213796544445427e-77</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>9.8813129168249309e-324</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string>check_internet</string>
			<key>HEIGHT</key>
			<real>18.51171875</real>
			<key>HIDDEN</key>
			<integer>1</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>3.9525251667299724e-323</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>NAME</key>
			<string>check_internet</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>CENTER</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONW</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>19</integer>
			<key>WIDTH</key>
			<real>201.03515625</real>
			<key>X</key>
			<real>64</real>
			<key>Y</key>
			<real>7</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print namespace dict</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>3.1235778044273617e-311</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.6052352914508432e-319</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>20.890625</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>2.414831210118974e-311</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>6.3464862315768461e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>print_namespace</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>1</integer>
			<key>WIDTH</key>
			<real>117.4375</real>
			<key>X</key>
			<real>115</real>
			<key>Y</key>
			<real>30</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print OSC INPUT</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>8.4879831638610893e-314</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.9406564584124654e-323</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>19.40234375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>2.0430087415929317e+235</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0027956501483572555</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>6.2024603364684129e-248</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.7813423231340067e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>log_osc_in</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<true/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>4</integer>
			<key>WIDTH</key>
			<real>162.33203125</real>
			<key>X</key>
			<real>6</real>
			<key>Y</key>
			<real>84</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print MINUIT INPUT</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>8.4879831638610893e-314</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.9406564584124654e-323</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>19.40234375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>2.0430087415929317e+235</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0027956501483572555</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>6.2024603364684129e-248</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.7813423231340067e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>log_minuit_in</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<true/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>5</integer>
			<key>WIDTH</key>
			<real>162.33203125</real>
			<key>X</key>
			<real>6</real>
			<key>Y</key>
			<real>61</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print MINUIT OUTPUT</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>8.4879831638610893e-314</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.9406564584124654e-323</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>19.40234375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>2.0430087415929317e+235</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0027956501483572555</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>6.2024603364684129e-248</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.7813423231340067e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>log_minuit_out</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<true/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>6</integer>
			<key>WIDTH</key>
			<real>162.33203125</real>
			<key>X</key>
			<real>171</real>
			<key>Y</key>
			<real>61</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print OSC OUTPUT</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>8.4879831638610893e-314</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.9406564584124654e-323</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>19.40234375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>2.0430087415929317e+235</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0027956501483572555</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>6.2024603364684129e-248</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>2.7813423231340067e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>log_osc_out</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<true/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>7</integer>
			<key>WIDTH</key>
			<real>162.33203125</real>
			<key>X</key>
			<real>171</real>
			<key>Y</key>
			<real>84</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>print listen dict</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>3.1235778044273617e-311</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.6052352914508432e-319</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>20.18359375</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>2.414831210118974e-311</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>6.3464862315768461e-309</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>print_listen</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>8</integer>
			<key>WIDTH</key>
			<real>96.140625</real>
			<key>X</key>
			<real>237</real>
			<key>Y</key>
			<real>30</real>
		</dict>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>1</integer>
			<key>CAPTION</key>
			<string>Github repository</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>2.5150190962362712e-99</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>1.2122731125303017e-314</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>20.62890625</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>7.2911271534069144e-304</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>-1.2556742745660991e+299</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>3.4814006093604532e-315</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>9.8205839488890555e-91</real>
			<key>NAME</key>
			<string>open_issues</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string>open_issues</string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>BUTTON</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>13</integer>
			<key>WIDTH</key>
			<real>103.2265625</real>
			<key>X</key>
			<real>7</real>
			<key>Y</key>
			<real>30</real>
		</dict>
	</array>
	<key>DESCRIPTION</key>
	<string>This module implements the Minuit protocol. It has been designed and tested with i-score software/
First discover is quite long (a few minutes), so please download the template for i-score : 
https://raw.githubusercontent.com/PixelStereo/minuit-4-modul8/master/modul8-template.scorejson

More information about i-score: 
https://github.com/OSSIA/i-score
More information on the Minuit repository : 
https://github.com/Minuit/minuit
</string>
	<key>MODULE_AUTOFLUSH</key>
	<false/>
	<key>MODULE_CONTROL_ID_COUNTER</key>
	<integer>21</integer>
	<key>MODULE_LAYER_CONTEXTUAL</key>
	<false/>
	<key>MODULE_RESETDIRECTKEY_PAUSED</key>
	<true/>
	<key>MODULE_TITLEBAR_B</key>
	<real>0.20392157137393951</real>
	<key>MODULE_TITLEBAR_G</key>
	<real>0.13333334028720856</real>
	<key>MODULE_TITLEBAR_R</key>
	<real>0.08235294371843338</real>
	<key>PREFERENCES</key>
	<dict>
		<key>SCRIPT_STATE</key>
		<string>PLAYING</string>
		<key>WINDOW_HIDDEN</key>
		<false/>
		<key>WINDOW_MINIMIZED</key>
		<false/>
		<key>WINDOW_X</key>
		<real>708</real>
		<key>WINDOW_Y</key>
		<real>878</real>
	</dict>
	<key>SCRIPT_CLEANUP</key>
	<string></string>
	<key>SCRIPT_DESERIALIZE</key>
	<string></string>
	<key>SCRIPT_EVENT</key>
	<string># incoming OSC messages
if type == 'OSC':
	#this is a Minuit query
	if '?' in param['address']:
		if print_minuit_input : print "MINUIT INPUT : ",  param['address'] , param['args']
		sender = param['address'].split('?')[0]
		query = param['address'].split('?')[1]
		node = param['args'][0]
		args = param['args'][1:]
		oscquery(sender,query,node,args)
	#this is a Minuit error
	elif '!' in param['address']:
		if print_minuit_input : print "MINUIT ERROR : ",  param['address'] , param['args']
		print 'error :' , 	param
	#this is a Minuit answer (it won't be used for the 0.2 version of this module)
	elif ':' in param['address']:
		if print_minuit_input : print "MINUIT INPUT : ",  param['address'] , param['args']
		print 'answer is not supported in this version of this module'
	#this is an OSC message
	elif '/' == param['address'][0]:
		if print_osc_input : print "OSC INPUT : ", param['address'] , param['args']
		keyword = param['address']
		keyword = keyword.split('/')[1:]
		if keyword[0] == 'master':
			layer_index = 0
			keyword = 'ctrl_' + '_'.join(keyword)
		elif keyword[0] == 'mask':
			layer_index = 0
			keyword = 'direct_globalMask_' + '_'.join(keyword[1:])
		else:
			layer_index = keyword[0].split('.')[1]
			# support wildcard for instances
			if layer_index == '*':
				layer_index = -1
			else:
				layer_index = int(layer_index)
			keyword = keyword[1:]
			keyword = 'ctrl_layer_' + '_'.join(keyword)
			#damned param with a undescore at the end
			if keyword == 'ctrl_layer_auto_scaleXY' : 
				keyword = 'ctrl_layer_auto_scaleXY_'
			if keyword =='ctrl_layer_auto_moveSizefactor':
				keyword = 'ctrl_layer_auto_moveSize_factor'
		modul8.setValue(keyword, param['args'][0], layer_index)</string>
	<key>SCRIPT_INIT</key>
	<string>version = 2.9 #version check
if modul8.getValue('direct_version', 0) &lt; version : module.stop() 

#for pretty-print of dictionaries
from pprint import pprint

#for button to open github issue of minuit
import webbrowser
open_issues_url = 'https://github.com/PixelStereo/minuit-4-modul8'
iscore_link_url = 'http://i-score.org'

#interface
print_osc_input = False
print_osc_output = False
print_minuit_input = False
print_minuit_output = False

#check for updates
minuit_module_version = 0.2
module.hideGroup('update')
module.hideGroup('uptodate')
module.hideGroup('check_internet')
import httplib
web = httplib.HTTPSConnection("raw.githubusercontent.com")
try:
	web.request("GET", "/PixelStereo/minuit-4-modul8/master/last_version.md")
	web_answer = web.getresponse()
except Exception:
	web_answer = None
#print web_answer.status
#print web_answer.reason
if web_answer:
	if web_answer.reason == 'OK' :
		server_message = web_answer.read()
		server_message = float(server_message)
		#print server_message
		if minuit_module_version &lt; server_message : 
			module.showGroup('update')
		else :
			module.showGroup('uptodate')
else : 
	module.showGroup('check_internet')	
web.close()


#################
# Namespace Module
# Pixel Stereo - 2014
################################

"""make a dictionary with the whole namespace when loading the module
container have 'data' and 'attributes' dict
parameters have 'attributes' dict
parameters are in the 'data' dict of its parent container"""

#######################
#INIT NAMESPACE
#######################
#create the main dictionary
m_namespace = {}
#add application attributes
m_namespace.setdefault('attributes',{'author':'garagecube','name':'modul8','version': modul8.getValue('info_version',0),'project':modul8.getValue('info_projectName',0)})
m_namespace.setdefault('data',{})
#create the master dictionary
m_master = {}
#add master attributes
m_master.update({'attributes':{'service':'model','tags':' ','priority': 1}})
#add master data placeholder
m_master.setdefault('data' , {})
#create the mask dictionary
m_mask = {}
#add mask attributes
m_mask.update({'attributes':{'service':'model','tags':' ','priority': 1}})
#add mask data placeholder
m_mask.setdefault('data' , {})
#add layers placeholder
m_layers = {}
#add mask to main dict
m_namespace['data'].setdefault('mask',m_mask)
#add master to main dict
m_namespace['data'].setdefault('master',m_master)
#define priority index
auto_priority_index = 1


def add_moveSizeFactor():
	"""this keyword is not enumerated """
	m_keyword = ['auto','moveSizefactor']
	param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 	'rangeClipmode' : 'both','repetitionsFilter' : 1,'type' : 'decimal'}}
	m_layers[layer_index]['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})
		
		
#######################
#FILL IN NAMESPACE DICT
#######################
#get all keywords (aka parameters) from Modul8
for keyword in modul8.getValue ('info_keywords',0) :
	#layer index is 0 for all master parameters
	layer_index = 0
	#get the current value of this parameter
	valueKeyw = modul8.getValue (keyword,layer_index)
	#This is not usefull
	if keyword == 'ctrl_layerStack_positionChange' or keyword == 'ctrl_master_layerStackPositionChange' or keyword == 'ctrl_layerStack_duplicate' or keyword == 'ctrl_layer_stackPosition' or keyword == 'ctrl_ui_minimalizeMainWindow' or keyword == 'ctrl_ui_console' or keyword == 'ctrl_ui_focusedControl' or keyword == 'ctrl_master_invColor' or keyword == 'ctrl_master_layerStackPositionChange' or keyword == 'ctrl_layer_focused' or keyword == 'id' or keyword == 'ctrl_layer_activated' or keyword == 'ctrl_layer_id':
		pass
	#List of master controls
	# #################################### THE MASTER #########################################
	elif keyword.startswith ('ctrl_master') :
		#replace underscore with slash… more OSC-user-friendly
		m_keyword = keyword.split('_')[2:]
		#increment priority
		auto_priority_index = auto_priority_index + 1
		m_keyword = keyword.split('_')[2:]
		#define parameters attributes 
		param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both','repetitionsFilter' : 1,'type' : 'decimal'}}
		if len(m_keyword) == 1:
			#this is a parameter
			m_master['data'].update({m_keyword[0]:param_dict})
		if len(m_keyword) == 2:
			#this is a node
			m_master['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
			#this is a parameter
			m_master['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})	
	# #################################### THE GLOBAL MASK  #########################################
	elif keyword.startswith ('direct_globalMask') :	
		#replace underscore with slash… more OSC-user-friendly
		m_keyword = keyword.split('_')[2:]
		#increment priority
		auto_priority_index = auto_priority_index + 1
		m_keyword = keyword.split('_')[2:]
		#define parameters attributes 
		param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both','repetitionsFilter' : 1,'type' : 'decimal'}}
		if len(m_keyword) == 1:
			#this is a parameter
			m_mask['data'].update({m_keyword[0]:param_dict})
		if len(m_keyword) == 2:
			#this is a node
			m_mask['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
			#this is a parameter
			m_mask['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})

	# #################################### THE LAYERS  #########################################
	elif keyword.startswith ('ctrl_layer') :
		#This is a layer parameter
		#iterate the ten layers
		for layer_index in range(1,11):
			if keyword == 'ctrl_layer_auto_scaleXY_':
				keyword = 'ctrl_layer_auto_scaleXY'
			#make a nice name for each layer (layer.2)
			layer_index = 'layer.' + str(layer_index)
			#increment the priority
			auto_priority_index = auto_priority_index + 1
			#create for each layer a dict with attributes and placeholder for data
			m_layers.setdefault(layer_index,{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
			m_keyword = keyword
			#replace underscore with slash… more OSC-user-friendly
			m_keyword = keyword.split('_')[2:]
			#define parameters attributes 
			param_dict = {'attributes' : {'value': valueKeyw,'priority': auto_priority_index,'service':'parameter','tags':' ' , 'rangeBounds' : [0,1] , 'rangeClipmode' : 'both','repetitionsFilter' : 1,'type' : 'decimal'}}
			if len(m_keyword) == 1:
				#this is a parameter
				m_layers[layer_index]['data'].update({m_keyword[0]:param_dict})
			if len(m_keyword) == 2:
				#this is a container
				m_layers[layer_index]['data'].setdefault(m_keyword[0],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
				#this is a parameter
				m_layers[layer_index]['data'][m_keyword[0]]['data'].update({m_keyword[1]:param_dict})
				if keyword == 'ctrl_layer_auto_moveSize':
					#increment the priority
					auto_priority_index = auto_priority_index + 1
					add_moveSizeFactor()
			elif len(m_keyword) ==3:
				if m_keyword[1] == 'auto':
					#this is a container
					m_layers[layer_index]['data'][m_keyword[0]]['data'].setdefault(m_keyword[1],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index}})
					#this is a parameter
					m_layers[layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]].update({m_keyword[2]:param_dict})
				else:
					#this is a container
					m_layers[layer_index]['data'][m_keyword[0]]['data'].setdefault(m_keyword[1],{'attributes' : {'service':'model','tags':' ','priority': auto_priority_index} , 'data' : {}})
					#this is a parameter
					m_layers[layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['data'].update({m_keyword[2]:param_dict})
		#update the main dict with the ten layers
		m_namespace['data'].update(m_layers)



#################
# Minuit Module
# Pixel Stereo - 2014/2015
################################
import socket

#init empty listen dict
m_listen = {}


def oscquery (sender,query,node,args):
	#this is a 'namespace' query
	if query == 'namespace':
		address = 'modul8:namespace'
		if node == '/' :
			attributes = ['version' , 'name' , 'author']
			answer = ['/' , 'Application' , 'nodes={' , m_namespace['data'].keys() , '}' , 'attributes={' , attributes , '}']
			if print_minuit_output : print "MINUIT OUTPUT : ", address , answer
			modul8.sendOSC(address,answer)
		else:
			if len(node.split('/')) &gt; 2:
				# need to know if it is a node or a leaf
				# a node has a data content, and a leaf hasn't
				m_node = node.split('/')[1:]
				if len(m_node) == 2:
					if 'data' in m_namespace['data'][m_node[0]]['data'][m_node[1]].keys():
						answer = [node , 'Container' , 'nodes={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'].keys() , '}' , 'attributes={' 'priority' , 'tags' , 'service' , '}']
					else:
						answer = [node , 'Data' , 'attributes ={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['attributes'].keys() , '}']
				elif len(m_node) == 3:
					if 'data' in m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]].keys():
						answer = [node , 'Container' , 'nodes={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['data'].keys() , '}' , 'attributes={' 'priority' , 'tags' , 'service' , '}']
					else:
						answer = [node , 'Data' , 'attributes ={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['attributes'].keys() , '}']
				elif len(m_node) == 4:
					if 'data' in m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['data'][m_node[3]].keys():
						answer = [node , 'Container' , 'nodes={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['data'][m_node[3]]['data'].keys() , '}' , 'attributes={' 'priority' , 'tags' , 'service' , '}']
					else:
						answer = [node , 'Data' , 'attributes ={' , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['data'][m_node[3]]['attributes'].keys() , '}']
				if print_minuit_output : print "MINUIT OUTPUT : ", address , answer
				modul8.sendOSC(address,answer)
			else:
				m_node = node.split('/')[1]
				answer = [node , 'Container' , 'nodes={' , m_namespace['data'][m_node]['data'].keys() , '}' , 'attributes={' 'priority' , 'tags' , 'service' , '}']
				if print_minuit_output : print "MINUIT OUTPUT : ", address , answer
				modul8.sendOSC(address,answer)
	#this is a 'get' query
	elif query == 'get':
		address = 'modul8:get'
		m_node = node.split(':')[:1][0]
		get_request = node.split(':')[1:][0]
		if m_node == '/':
			answer = [node , m_namespace['attributes'][get_request]]
		else:		
			m_node = m_node.split('/')
			m_node = m_node[1:]	
			if len(m_node) == 1:					
				answer = [node , m_namespace['data'][m_node[0]]['attributes'][get_request]]
			elif len(m_node) == 2:
				answer = [node , m_namespace['data'][m_node[0]]['data'][m_node[1]]['attributes'][get_request]]
			elif len(m_node) == 3:
				answer = [node , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['attributes'][get_request]]
			elif len(m_node) == 4:
				answer = [node , m_namespace['data'][m_node[0]]['data'][m_node[1]]['data'][m_node[2]]['data'][m_node[3]]['attributes'][get_request]]
		#i-score doesn't support True or False, but 1 or 0
		if answer[1] == True : answer[1] = 1
		if answer[1] == False : answer[1] = 0
		if print_minuit_output : print "MINUIT OUTPUT : ", address , answer
		modul8.sendOSC(address,answer)
	#this is a 'listen' query
	elif query == 'listen':
		address = 'modul8:listen'
		keyword = node
		keyword = keyword.split('/')[1:]
		if keyword[0] == 'master':
			layer_index = 'master'
			keyword = 'ctrl_' + '_'.join(keyword)
		elif keyword[0] == 'mask':
			layer_index = 'mask'
			keyword =  '_'.join(keyword)
		else:
			layer_index = keyword[0]
			keyword = keyword[1:]
			keyword = 'ctrl_layer_' + '_'.join(keyword)
		args = args[0]
		data = keyword.split(':')[:1][0]
		# if request is '/' (root), clear the listen dict
		if keyword == 'ctrl_layer_' :
			pass
		else:
			attribut = keyword.split(':')[1]
			if args == 'enable':
				#add m_node to 'm_listen' dictionary
				m_listen.setdefault(layer_index,{})
				m_listen[layer_index].update({data:attribut})
			elif args == 'disable':
				del m_listen[layer_index][data]</string>
	<key>SCRIPT_KEYWORDEVENT</key>
	<string>#This is not usefull
if keyword == 'ctrl_layerStack_positionChange' or keyword == 'ctrl_master_layerStackPositionChange' or keyword == 'ctrl_layerStack_duplicate' or keyword == 'ctrl_layer_stackPosition' or keyword == 'ctrl_ui_minimalizeMainWindow' or keyword == 'ctrl_ui_console' or keyword == 'ctrl_ui_focusedControl' or keyword == 'ctrl_master_invColor' or keyword == 'ctrl_master_layerStackPositionChange' or keyword == 'ctrl_layer_focused' or keyword == 'id' or keyword == 'ctrl_layer_activated' or keyword == 'ctrl_layer_id':
	pass
elif keyword == 'ctrl_layer_auto_moveSize_factor':
	keyword = 'ctrl_layer_auto_moveSizefactor'
#this is a master parameter
elif keyword.startswith ('ctrl_master') :	
	#one line for listen function
	layer_index = 'master'
	#List of master controls
	m_keyword = keyword.split('_')[2:]
	m_keyword = m_keyword
	if len(m_keyword) == 1:
		m_namespace['data']['master']['data'][m_keyword[0]]['attributes']['value'] = param
	if len(m_keyword) == 2:
		m_namespace['data']['master']['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
#this is a mask parameter
elif keyword.startswith ('direct_globalMask') :	
	#one line for listen function
	layer_index = 'mask'
	#List of mask controls
	m_keyword = keyword.split('_')[2:]
	m_keyword = m_keyword
	if len(m_keyword) == 1:
		m_namespace['data']['mask']['data'][m_keyword[0]]['attributes']['value'] = param
	if len(m_keyword) == 2:
		m_namespace['data']['mask']['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
	if len(m_keyword) == 3:
		m_namespace['data']['mask']['data'][m_keyword[0]]['data'][m_keyword[1]]['data'][m_keyword[2]]['attributes']['value'] = param
#this is a layer parameter
elif keyword.startswith ('ctrl_layer') :
	if layer&gt;0:
		layer_index = 'layer.' + str(layer)
		m_keyword = keyword
		m_keyword = keyword.split('_')[2:]
		param_dict = {'value': param}
		# just for auto_scaleXY_ becuase end with a '_'
		if m_keyword[-1] == '':
			del m_keyword[-1]
		if len(m_keyword) == 1:
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['attributes']['value'] = param
		if len(m_keyword) == 2:
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['attributes']['value'] = param
		elif len(m_keyword) ==3:
			m_namespace['data'][layer_index]['data'][m_keyword[0]]['data'][m_keyword[1]]['data'][m_keyword[2]]['attributes']['value'] = param

#Listen 
if layer &gt; 0:
	layer_index = 'layer.' + str(layer)
if keyword.startswith ('ctrl_master') :	
	layer_index = 'master'
if keyword.startswith ('direct_globalMask') :	
	layer_index = 'mask'
	keyword = keyword = keyword.split('_')
	keyword = keyword[2:]
	bogus = ['mask']
	keyword = bogus + keyword 
	keyword = '_'.join(keyword)
if keyword == 'ctrl_layer_auto_scaleXY_':
	keyword = 'ctrl_layer_auto_scaleXY	'
if layer_index in m_listen.keys() :
	if keyword in m_listen[layer_index].keys() :
		if m_listen[layer_index][keyword] == 'value':
			keyword = keyword.split('_')
			if layer_index == 'mask' :
				keyword = keyword[1:]
			else : 
				keyword = keyword[2:]
			keyword = '/'.join(keyword)
			address = '/' + '/'.join([layer_index,keyword])
			#i-score doesn't support True or False, but 1 or 0
			if param == True : param = 1
			if param == False : param = 0
			if print_osc_output : print "OSC OUTPUT : ",  address, param
			modul8.sendOSC('modul8:listen' , address , param)
</string>
	<key>SCRIPT_MESSAGE</key>
	<string>#message from the module interface
if msg == 'log_osc_in' :
	print_osc_input =  param['value']
elif msg == 'log_osc_out' :
	print_osc_output = param['value']
elif msg == 'log_minuit_in' :
	print_minuit_input = param['value']
elif msg == 'log_minuit_out' :
	print_minuit_output = param['value']
elif msg == 'print_namespace' :
	if param['value'] == 1:
		pprint (m_namespace)
elif msg == 'print_listen' :
	if param['value'] == 1:
		pprint (m_listen)
elif msg == 'open_issues' :
	if param['value'] == 1:
		print 'TT'
		webbrowser.open(open_issues_url,new=2)
elif msg == 'iscore_link' :
	if param['value'] == 1:
		webbrowser.open(iscore_link_url,new=2)</string>
	<key>SCRIPT_PAUSEEVENT</key>
	<string></string>
	<key>SCRIPT_PERIODICAL</key>
	<string></string>
	<key>SCRIPT_SERIALIZE</key>
	<string></string>
	<key>SHORT_DESCRIPTION</key>
	<string>This module implements the Minuit protocol as need for i-score software</string>
	<key>VERSION</key>
	<string>0.2</string>
	<key>WINDOW_HEIGHT</key>
	<real>130</real>
	<key>WINDOW_WIDTH</key>
	<real>340</real>
</dict>
</plist>
